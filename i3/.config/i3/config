# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

focus_follows_mouse no

# Gaps settings

for_window [class=".*"] border pixel 0

gaps inner 5 

smart_gaps on

set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

exec --no-startup-id dunst
exec --no-startup-id xset s 300 # blank screen after N seconds of inactivity
exec --no-startup-id xset +dpms # enable DPMS
exec --no-startup-id xset dpms 600 600 0 # trigger display {standby, suspend, off} after N seconds of inactivity
exec --no-startup-id xss-lock -l -- betterlockscreen -l dim

#exec --no-startup-id xrandr --dpi 118
#exec --no-startup-id autorandr --change
exec --no-startup-id xsettingsd

exec --no-startup-id gnome-keyring-daemon -s --components=gpg,pkcs11,secrets,ssh

exec --no-startup-id nm-applet
#exec --no-startup-id blueman-applet
#exec --no-startup-id pa-applet
exec --no-startup-id udiskie -2 -s

exec --no-startup-id mpd
exec --no-startup-id mpDris2
bindsym $mod+Shift+m exec --no-startup-id pkill mpd && sleep 1 && mpd

#exec_always --no-startup-id "sleep 1; $HOME/.config/polybar/launch.sh"

exec --no-startup-id wal -R

exec --no-startup-id unclutter
exec --no-startup-id redshift

exec --no-startup-id sleep 1 && xset s activate

# Screenshot
# Multi-screen screenshots with scrot
bindsym --release Print exec scrot 'screenshot_%Y%m%d_%H%M%S.png' -e 'mkdir -p ~/Pictures/screenshots && mv $f ~/Pictures/screenshots && xclip -selection clipboard -t image/png -i ~/Pictures/screenshots/`ls -1 -t ~/Pictures/screenshots | head -1`' # All screens

# OSX-like area selection screenshots
bindsym --release Shift+Print exec scrot -s 'screenshot_%Y%m%d_%H%M%S.png' -e 'mkdir -p ~/Pictures/screenshots && mv $f ~/Pictures/screenshots && xclip -selection clipboard -t image/png -i ~/Pictures/screenshots/`ls -1 -t ~/Pictures/screenshots | head -1`' # Area selection

# Mpd
bindsym $mod+p exec mpc toggle

# Bluetooth mode
#
#bindsym $mod+b exec "bluetoothctl -- power on && notify-send -i bluetooth -u normal -t 1000 -a BT 'Bluetooth ON'"
#bindsym $mod+Shift+b exec "bluetoothctl -- power off && notify-send -i bluetooth -u normal -t 1000 -a BT 'Bluetooth OFF'"
#bindsym $mod+c exec "bluetoothctl -- connect $DEVICE && notify-send -i bluetooth -u normal -t 1000 -a BT 'Connect $DEVICE'"
#bindsym $mod+Shift+d exec "bluetoothctl -- disconnect $DEVICE && notify-send -i bluetooth -u normal -t 1000 -a BT 'Disconnect $DEVICE'"

set $AUSDOMM05 E8:07:BF:03:15:4B
set $AUKEYEPB40 00:23:02:3F:01:CB
set $mode_bt Bluetooth menu (o) on, (f) off, (c) connect
mode "$mode_bt" {
    bindsym o exec --no-startup-id bt on, mode "default"
    bindsym f exec --no-startup-id bt off, mode "default"
    bindsym c mode "$mode_bt_connect"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+b mode "$mode_bt"

set $mode_bt_connect Connect Bluetooth device (1) Ausdom M05, (2) AUKEY EP-B40
mode "$mode_bt_connect" {
    bindsym 1 exec --no-startup-id bt toggle $AUSDOMM05, mode "default"
    bindsym 2 exec --no-startup-id bt toggle $AUKEYEPB40, mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Toggle vpn
bindsym $mod+Shift+v exec vpn.sh

# Lock and suspend
bindsym Mod1+l exec --no-startup-id i3exit lock

# start a terminal
bindsym $mod+Return exec xst
#bindsym $mod+r exec chromium 
#bindsym $mod+m exec thunar 

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
#bindsym $mod+d exec dmenu_run -nb "$fg" -nf "$bg" -sb "$bg" -sf "$fg"
bindsym $mod+d exec rofi -show drun -show-icons -nb "$fg" -nf "$bg" -sb "$bg" -sf "$fg"

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# do not disturb
bindsym $mod+n exec notify-send "DUNST_COMMAND_RESUME" && notify-send -t 900 "Resume notifications"
bindsym $mod+Shift+n exec notify-send -t 900 "Pause notifications" && sleep 1 && notify-send "DUNST_COMMAND_PAUSE"

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+Shift+a focus child

# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the first scratchpad window
bindsym $mod+minus scratchpad show

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:"
set $ws2 "2:"
set $ws3 "3:"
set $ws4 "4:"
set $ws5 "5:"
set $ws6 "6:"
set $ws7 "7:"
set $ws8 "8:"
set $ws9 "9:"
set $ws10 "10:"


workspace $ws1 output DP2-1 eDP1
workspace $ws2 output DP2-1 eDP1
workspace $ws3 output DP2-1 eDP1
workspace $ws4 output DP2-1 eDP1
workspace $ws5 output DP2-1 eDP1
workspace $ws6 output DP1 HDMI1 DP2-1 eDP1
workspace $ws7 output DP1 HDMI1 DP2-1 eDP1
workspace $ws8 output eDP1
workspace $ws9 output eDP1
workspace $ws10 output eDP1

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
#bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id i3exit lock, mode "default"
    bindsym e exec --no-startup-id i3exit logout, mode "default"
    bindsym s exec --no-startup-id i3exit suspend, mode "default"
    bindsym h exec --no-startup-id i3exit hibernate, mode "default"
    bindsym r exec --no-startup-id i3exit reboot, mode "default"
    bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Delete mode "$mode_system"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Window rules
for_window [class="^[Ll]xappearance$"] floating enable
for_window [class="^[pP]avucontrol$"] floating enable
for_window [class="^.blueman-manager-wrapped$"] floating enable

for_window [class="^[Mm]ailspring$"] move window to workspace $ws2
for_window [class="^[Tt]ermite$"] move window to workspace $ws3; workspace $ws3; focus
for_window [class="^xterm-256color$"] move window to workspace $ws3; workspace $ws3; focus
for_window [class="^[Cc]ode$"] move window to workspace $ws4; workspace $ws4; focus
for_window [class="^[Cc]ode - OSS$"] move window to workspace $ws4; workspace $ws4; focus
for_window [class="^VSCodium$"] move window to workspace $ws4; workspace $ws4; focus
for_window [class="^[Bb]rave-browser$"] move window to workspace $ws1; workspace $ws1; focus
for_window [class="^[Cc]hromium$"] move window to workspace $ws1; workspace $ws1; focus

# Enble media keys
bindsym XF86AudioPlay exec mpc play
bindsym XF86AudioPause exec mpc pause
bindsym XF86AudioNext exec mpc next
bindsym XF86AudioPrev exec mpc prev
bindsym XF86AudioMute exec amixer set Master toggle
bindsym XF86AudioRaiseVolume exec amixer set Master 5%+
bindsym XF86AudioLowerVolume exec amixer set Master 5%-
bindsym XF86AudioMicMute exec amixer set Capture toggle

# Brightness controll
bindsym XF86MonBrightnessDown exec xbacklight -5%
bindsym XF86MonBrightnessUp exec xbacklight +5%

# rfkill
#binsym XF86RFKill exec 

# Set colors from Xresources
# Change 'color7' and 'color2' to whatever colors you want i3 to use 
# from the generated scheme.
# NOTE: The '#f0f0f0' in the lines below is the color i3 will use if
# it fails to get colors from Xresources.
set_from_resource $zero i3wm.color0 #f0f0f0
set_from_resource $one i3wm.color1 #f0f0f0
set_from_resource $two i3wm.color2 #f0f0f0
set_from_resource $three i3wm.color3 #f0f0f0
set_from_resource $bg i3wm.color4 #f0f0f0
set_from_resource $five i3wm.color5 #f0f0f0
set_from_resource $fg i3wm.color7 #f0f0f0

# class                 border  backgr. text indicator child_border
client.focused          $one    $one    $bg  $bg       $one
client.focused_inactive $bg     $bg     $fg  $bg       $bg
client.unfocused        $bg     $bg     $fg  $bg       $bg
client.urgent           $bg     $bg     $fg  $bg       $bg
client.placeholder      $bg     $bg     $fg  $bg       $bg

client.background       $bg

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
	mode hide
    	hidden_state hide
    	modifier Shift+Mod1
	#height 36
	position top
	tray_output primary
	tray_padding 0
	strip_workspace_numbers yes
	font pango:DejaVu Sans Mono for Powerline, FontAwesome 10
	#status_command ~/bin/mybar
	status_command i3status-rs ~/.config/i3/status.toml
	#status_command $HOME/workspace/bumblebee-status/bumblebee-status -m cpu memory brightness pasink pasource battery date time -p engine.workspacewrap=false time.format="%H:%M" date.format="%a, %b %d %Y" memory.format="{percent:05.02f}%" -t iceberg
	colors {
            background $zero
            statusline $bg
            separator $fg
    
            # class            border  backgr. text
            focused_workspace  $zero   $zero   $two
            active_workspace   $zero   $zero   $fg
            inactive_workspace $zero   $zero   $fg
            urgent_workspace   $zero   $zero   $three
            binding_mode       $zero   $zero   $two
        }
}
